[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://ysggofqjquj0"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_omf5u"]
operator = 2

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_vlxxc"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_mjpmd"]
source = 5
texture = SubResource("CompressedTexture2D_vlxxc")
texture_type = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_omf5u"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_gqdp6"]
parameter_name = "Alpha_Source"
texture_type = 1
color_default = 2
texture_repeat = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_omf5u"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_gqdp6"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(2, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_nsvcx"]
parameter_name = "Pan_Speed"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_7bt5g"]
parameter_name = "Color_Texture"
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_gqdp6"]
expanded_output_ports = [0]
source = 5

[resource]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Color_Texture : source_color;
uniform vec2 Pan_Speed;
uniform sampler2D Alpha_Source : source_color, hint_default_transparent, repeat_enable;



void fragment() {
	vec4 n_out9p0;
// Texture2D:9
	n_out9p0 = texture(Color_Texture, UV);
	float n_out9p4 = n_out9p0.a;


// Input:5
	float n_out5p0 = TIME;


// Vector2Parameter:7
	vec2 n_out7p0 = Pan_Speed;


// VectorOp:6
	vec2 n_out6p0 = vec2(n_out5p0) * n_out7p0;


// UVFunc:3
	vec2 n_in3p1 = vec2(1.00000, 1.00000);
	vec2 n_out3p0 = n_out6p0 * n_in3p1 + UV;


	vec4 n_out2p0;
// Texture2D:2
	n_out2p0 = texture(Alpha_Source, n_out3p0);


// FloatOp:10
	float n_out10p0 = n_out9p4 * n_out2p0.x;


// Output:0
	COLOR.rgb = vec3(n_out9p0.xyz);
	COLOR.a = n_out10p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(780, 60)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_mjpmd")
nodes/fragment/2/position = Vector2(-180, 120)
nodes/fragment/3/node = SubResource("VisualShaderNodeUVFunc_omf5u")
nodes/fragment/3/position = Vector2(-580, 60)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture2DParameter_gqdp6")
nodes/fragment/4/position = Vector2(-740, 360)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_omf5u")
nodes/fragment/5/position = Vector2(-1321.21, -34.713)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorOp_gqdp6")
nodes/fragment/6/position = Vector2(-900, 20)
nodes/fragment/7/node = SubResource("VisualShaderNodeVec2Parameter_nsvcx")
nodes/fragment/7/position = Vector2(-1260, 240)
nodes/fragment/8/node = SubResource("VisualShaderNodeTexture2DParameter_7bt5g")
nodes/fragment/8/position = Vector2(-540, -340)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture_gqdp6")
nodes/fragment/9/position = Vector2(100, -300)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatOp_omf5u")
nodes/fragment/10/position = Vector2(420, 80)
nodes/fragment/connections = PackedInt32Array(4, 0, 2, 2, 3, 0, 2, 0, 5, 0, 6, 0, 6, 0, 3, 2, 7, 0, 6, 1, 8, 0, 9, 2, 9, 4, 10, 0, 2, 0, 10, 1, 10, 0, 0, 1, 9, 0, 0, 0)
